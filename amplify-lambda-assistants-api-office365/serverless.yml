service:  amplify-${self:custom.stageVars.DEP_NAME}-office365

frameworkVersion: "3"

package:
  exclude:
    - node_modules/**
    - venv/**

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-prune-plugin
  - serverless-cloudformation-changesets

custom:
  pythonRequirements:
    dockerizePip: non-linux
  stageVars: ${file(../var/${self:provider.stage}-var.yml)} 
  stages:
    - dev
    - staging
    - prod

provider:
  name: aws
  runtime: python3.11
  stage: ${opt:stage, 'dev'}
  region: ${self:custom.stageVars.DEP_REGION}
  versionFunctions: false
  logRetentionInDays: 365  
  apiGateway:
    restApiId:
      Fn::ImportValue: !Sub "${sls:stage}-RestApiId"
    restApiRootResourceId:
      Fn::ImportValue: !Sub "${sls:stage}-RestApiRootResourceId"

  environment:
    INTEGRATION_STAGE: ${self:provider.stage}
    OAUTH_AUDIENCE: ${self:custom.stageVars.OAUTH_AUDIENCE}
    OAUTH_ISSUER_BASE_URL: ${self:custom.stageVars.OAUTH_ISSUER_BASE_URL}
    API_KEYS_DYNAMODB_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-object-access-${sls:stage}-api-keys
    ACCOUNTS_DYNAMO_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}-accounts
    COST_CALCULATIONS_DYNAMO_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}-cost-calculations
    LAMBDA_API_IAM_POLICY_NAME: ${self:service}-${sls:stage}-iam-policy
    API_BASE_URL: https://${self:custom.stageVars.CUSTOM_API_DOMAIN}
    OAUTH_ENCRYPTION_PARAMETER: /amplify-${self:custom.stageVars.DEP_NAME}-assistants-api/${sls:stage}/oauth/integrations/encryption #must start with /
    OAUTH_USER_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-assistants-api-${sls:stage}-user-oauth-integrations
    OPS_DYNAMODB_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-lambda-ops-${sls:stage}-ops
    AMPLIFY_ADMIN_DYNAMODB_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-admin-${sls:stage}-admin-configs
    IDP_PREFIX: ${self:custom.stageVars.IDP_PREFIX}
    
  iam:
    role:
      managedPolicies:
        - !Ref LambdaAPIIAMPolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

      

functions:

  microsoftListIntegrations:
    handler: integrations/oauth.get_integrations
    timeout: 30
    events:
      - http:
          path: microsoft/integrations
          method: get

  microsoftIntegrationsRouter:
    handler: service/core.route_request
    timeout: 30
    events:
      - http:
          path: microsoft/integrations/{proxy+}
          method: post

   
  microsoftAdminConfigOpsTrigger:
    handler: service/register_ops.integration_config_trigger
    memorySize: 1024
    timeout: 300 
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::ImportValue: AmplifyAdminTableStreamArn
          batchSize: 1
          startingPosition: TRIM_HORIZON

resources:
  Resources:
    LambdaAPIIAMPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ${self:provider.environment.LAMBDA_API_IAM_POLICY_NAME}
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - s3:GetObject
                - s3:PutObject
                - s3:ListBucket
                - s3:DeleteObject
              Resource:
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.API_KEYS_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ACCOUNTS_DYNAMO_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.API_KEYS_DYNAMODB_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ACCOUNTS_DYNAMO_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COST_CALCULATIONS_DYNAMO_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COST_CALCULATIONS_DYNAMO_TABLE}/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.OAUTH_USER_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.OPS_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.OPS_DYNAMODB_TABLE}/index/*"

            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - "arn:aws:ssm:${self:provider.region}:${aws:accountId}:parameter/oauth/*"
                - "arn:aws:ssm:${self:provider.region}:${aws:accountId}:parameter${self:provider.environment.OAUTH_ENCRYPTION_PARAMETER}*"
            - Effect: Allow
              Action:
                - dynamodb:DescribeStream
                - dynamodb:GetRecords
                - dynamodb:GetShardIterator
                - dynamodb:ListStreams
              Resource:
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.AMPLIFY_ADMIN_DYNAMODB_TABLE}/stream/*"
