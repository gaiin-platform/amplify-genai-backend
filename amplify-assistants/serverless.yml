service: amplify-${self:custom.stageVars.DEP_NAME}-assistants

frameworkVersion: "3"

package:
  exclude:
    - node_modules/**
    - venv/**

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-prune-plugin
  - serverless-cloudformation-changesets


custom:
  stageVars: ${file(../var/${self:provider.stage}-var.yml)} 
  stages:
    - dev
    - staging
    - prod
    
  pythonRequirements:
    dockerizePip: true

  cf-changesets:
    requireChangeSet: ${self:custom.stageVars.CHANGE_SET_BOOLEAN}
  
  prune:
  automatic: true
  includeLayers: true
  number: 5

  deploymentBucket:
    versioning: true
    accelerate: true
    blockPublicAccess: true
    tags:
      - Key: Environment
        Value: ${self:provider.stage}         
    
provider:
  name: aws
  runtime: python3.11
  stage: ${opt:stage, 'dev'}
  region: ${self:custom.stageVars.DEP_REGION}
  versionFunctions: false
  logRetentionInDays: 365  
  apiGateway:
    restApiId:
      Fn::ImportValue: !Sub "${sls:stage}-RestApiId"
    restApiRootResourceId:
      Fn::ImportValue: !Sub "${sls:stage}-RestApiRootResourceId"

  environment:
    CHANGE_SET_BOOLEAN: ${self:custom.stageVars.CHANGE_SET_BOOLEAN}
    OAUTH_AUDIENCE: ${self:custom.stageVars.OAUTH_AUDIENCE}
    OAUTH_ISSUER_BASE_URL: ${self:custom.stageVars.OAUTH_ISSUER_BASE_URL}
    OPENAI_API_KEY: ${self:custom.stageVars.OPENAI_API_KEY} #When using the OpenAI API, you need to provide the ARN of the secret that contains the API key, the secret should be named OPENAI_API_KEY.
    LLM_ENDPOINTS_SECRETS_NAME_ARN: ${self:custom.stageVars.LLM_ENDPOINTS_SECRETS_NAME_ARN}
    LLM_ENDPOINTS_SECRETS_NAME: ${self:custom.stageVars.LLM_ENDPOINTS_SECRETS_NAME}
    HASH_FILES_DYNAMO_TABLE:  amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}-hash-files
    ASSISTANTS_OPENAI_PROVIDER: ${self:custom.stageVars.ASSISTANTS_OPENAI_PROVIDER}
    ASSISTANTS_FILES_BUCKET_NAME: amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}-rag-input #Rag Input Bucket
    S3_IMAGE_INPUT_BUCKET_NAME: amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}-image-input
    ASSISTANTS_DYNAMODB_TABLE: ${self:service}-${sls:stage}-assistants
    ASSISTANTS_ALIASES_DYNAMODB_TABLE: ${self:service}-${sls:stage}-assistant-aliases
    ASSISTANT_THREADS_DYNAMODB_TABLE: ${self:service}-${sls:stage}-assistant-threads
    ASSISTANT_THREAD_RUNS_DYNAMODB_TABLE: ${self:service}-${sls:stage}-assistant-thread-runs
    ASSISTANTS_CODE_INTERPRETER_FILES_BUCKET_NAME: ${self:service}-${sls:stage}-code-interpreter-files
    ASSISTANT_CODE_INTERPRETER_DYNAMODB_TABLE: ${self:service}-${sls:stage}-code-interpreter-assistants
    ASSISTANT_LAMBDA_MANAGED_POLICY: ${self:service}-${sls:stage}-managed-policy
    BILLING_DYNAMODB_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-chat-billing-${sls:stage}-additional-charges
    COST_CALCULATIONS_DYNAMO_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}-cost-calculations
    S3_SHARE_BUCKET_NAME: amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}-share
    SHARES_DYNAMODB_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}
    ACCOUNTS_DYNAMO_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-lambda-${sls:stage}-accounts
    API_KEYS_DYNAMODB_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-object-access-${sls:stage}-api-keys
    OBJECT_ACCESS_DYNAMODB_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-object-access-${sls:stage}-object-access
    GROUPS_DYNAMO_TABLE: amplify-${self:custom.stageVars.DEP_NAME}-object-access-${sls:stage}-amplify-groups
    API_BASE_URL: https://${self:custom.stageVars.CUSTOM_API_DOMAIN}/
    GROUP_ASSISTANT_CONVERSATIONS_DYNAMO_TABLE: ${self:service}-${sls:stage}-group-assistant-conversations
    GROUP_ASSISTANT_DASHBOARDS_DYNAMO_TABLE: ${self:service}-${sls:stage}-group-assistant-dashboards
    S3_GROUP_ASSISTANT_CONVERSATIONS_BUCKET_NAME: ${self:service}-${sls:stage}-group-conversations-content
    IDP_PREFIX: ${self:custom.stageVars.IDP_PREFIX}
    ASSISTANT_LOOKUP_DYNAMODB_TABLE: ${self:service}-${sls:stage}-assistant-lookup

  iam:
    role:
      managedPolicies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole      
        - arn:aws:iam::${aws:accountId}:policy/${self:provider.environment.ASSISTANT_LAMBDA_MANAGED_POLICY}
       
functions:

  remove_astp_perms:
    handler: service/core.remove_shared_ast_permissions
    timeout: 30
    events:
      - http:
          path: assistant/remove_astp_permissions
          method: post
          cors: true

  create_ast:
    handler: service/core.create_assistant
    timeout: 30
    events:
      - http:
          path: assistant/create
          method: post
          cors: true

  list_asts:
    handler: service/core.list_assistants
    timeout: 30
    events:
      - http:
          path: assistant/list
          method: get
          cors: true

  share_ast:
    handler: service/core.share_assistant
    timeout: 30
    events:
      - http:
          path: assistant/share
          method: post
          cors: true

  request_access_to_astp:
    handler: service/core.request_assistant_to_public_ast
    timeout: 30
    events:
      - http:
          path: assistant/request_access 
          method: post
          cors: true

  validate_ast_id:
    handler: service/core.validate_assistant_id
    timeout: 30
    events:
      - http:
          path: assistant/validate/assistant_id
          method: post
          cors: true

  delete_ast:
    handler: service/core.delete_assistant
    timeout: 30
    events:
      - http:
          path: assistant/delete
          method: post
          cors: true
    
  download_code_int_file:
    handler: openaiazure/assistant.get_presigned_url_code_interpreter
    events:
      - http:
          path: assistant/files/download/codeinterpreter
          method: post
          cors: true


  # This endpoint is mainly for local testing but doesn't have
  # a long enough timeout for use when running in AWS behind API Gateway
  create_code_int_ast:
    handler: openaiazure/assistant.create_code_interpreter_assistant 
    timeout: 30
    events:
      - http:
          path: assistant/create/codeinterpreter
          method: post
          cors: true
  
  chat_code_int_ast:
    handler: openaiazure/assistant.chat_with_code_interpreter
    timeout: 300

    events:
      - http:
          path: assistant/chat/codeinterpreter
          method: post
          cors: true

  # chat_code_interpreter_assistant_url: 
  #   handler: openaiazure/assistant.chat_with_code_interpreter
  #   timeout: 420 # 7 min
  #   url: true
    
  delete_ast_thread:
    handler: openaiazure/assistant.delete_assistant_thread
    events:
      - http:
          path: assistant/openai/thread/delete
          method: delete
          cors: true


  delete_ast_open_ai:
    handler: openaiazure/assistant.delete_assistant
    events:
      - http:
          path: assistant/openai/delete
          method: delete
          cors: true

  get_group_ast_conversations:
    handler: service/core.get_group_assistant_conversations
    timeout: 30
    events:
      - http:
          path: assistant/get_group_assistant_conversations
          method: post
          cors: true
  
  get_group_convs_data:
    handler: service/core.get_group_conversations_data
    timeout: 30
    events:
      - http:
          path: assistant/get_group_conversations_data
          method: post
          cors: true
          
  get_astg_system_user:
    handler: service/core.retrieve_astg_for_system_use
    events:
      - http:
          path: assistant/get/system_user
          method: get
          cors: true
  
  get_group_ast_dashboards:
    handler: service/core.get_group_assistant_dashboards
    timeout: 30
    events:
      - http:
          path: assistant/get_group_assistant_dashboards
          method: post
          cors: true

  save_user_rating:
    handler: service/core.save_user_rating
    timeout: 30
    events:
      - http:
          path: assistant/save_user_rating
          method: post
          cors: true

  lookup_ast_path:
    handler: service/core.lookup_assistant_path
    timeout: 30
    events:
      - http:
          path: assistant/lookup
          method: post
          cors: true

  add_ast_path:
    handler: service/core.add_assistant_path
    timeout: 30
    events:
      - http:
          path: assistant/add_path
          method: post
          cors: true

  scrape_website:
    handler: service/core.scrape_website
    timeout: 300
    events:
      - http:
          path: assistant/scrape_website
          method: post
          cors: true

  rescan_websites:
    handler: service/core.rescan_websites
    timeout: 300
    events:
      - http:
          path: assistant/rescan_websites
          method: post
          cors: true
      - schedule: 
          rate: cron(0 0 * * ? *) # Daily at midnight
          enabled: true

resources:
  Resources:

    AssistantLookupDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          -
            AttributeName: astPath
            AttributeType: S
          -
            AttributeName: assistantId
            AttributeType: S
        KeySchema:
          -
            AttributeName: astPath
            KeyType: HASH
        GlobalSecondaryIndexes:
          -
            IndexName: AssistantIdIndex
            KeySchema:
              -
                AttributeName: assistantId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.ASSISTANT_LOOKUP_DYNAMODB_TABLE}

    AssistantsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: user
            AttributeType: S
          -
            AttributeName: name
            AttributeType: S
          -
            AttributeName: assistantId
            AttributeType: S
          -
            AttributeName: version
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          -
            IndexName: UserIndex
            KeySchema:
              -
                AttributeName: user
                KeyType: HASH

            Projection:
              ProjectionType: ALL
          -
            IndexName: UserNameIndex
            KeySchema:
              - AttributeName: user
                KeyType: HASH
              - AttributeName: name
                KeyType: RANGE

            Projection:
              ProjectionType: ALL
          -
            IndexName: AssistantIdIndex
            KeySchema:
              - AttributeName: assistantId
                KeyType: HASH
              - AttributeName: version
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.ASSISTANTS_DYNAMODB_TABLE}

    AssistantsAliasesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          -
            AttributeName: assistantId
            AttributeType: S
          -
            AttributeName: user
            AttributeType: S
          -
            AttributeName: createdAt
            AttributeType: S
        KeySchema:
          -
            AttributeName: user
            KeyType: HASH
          -
            AttributeName: assistantId
            KeyType: RANGE
        GlobalSecondaryIndexes:
          -
            IndexName: AssistantIdIndex
            KeySchema:
              -
                AttributeName: assistantId
                KeyType: HASH
              -
                AttributeName: user
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          -
            IndexName: UserIndex
            KeySchema:
              -
                AttributeName: user
                KeyType: HASH
              -
                AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.ASSISTANTS_ALIASES_DYNAMODB_TABLE}

    AssistantThreadsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: user
            AttributeType: S
          -
            AttributeName: name
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          -
            IndexName: UserIndex
            KeySchema:
              -
                AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          -
            IndexName: UserNameIndex
            KeySchema:
              - AttributeName: user
                KeyType: HASH
              - AttributeName: name
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.ASSISTANT_THREADS_DYNAMODB_TABLE}
        
    AssistantThreadRunsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: user
            AttributeType: S

        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          -
            IndexName: UserIndex
            KeySchema:
              -
                AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.ASSISTANT_THREAD_RUNS_DYNAMODB_TABLE}

    AssistantCodeInterpreterDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: user
            AttributeType: S

        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          -
            IndexName: UserIndex
            KeySchema:
              -
                AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.ASSISTANT_CODE_INTERPRETER_DYNAMODB_TABLE}

    GroupAssistantConversationsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        AttributeDefinitions:
          - AttributeName: conversationId
            AttributeType: S
          - AttributeName: assistantId
            AttributeType: S
        KeySchema:
          - AttributeName: conversationId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: AssistantIdIndex
            KeySchema:
              - AttributeName: assistantId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.GROUP_ASSISTANT_CONVERSATIONS_DYNAMO_TABLE}
    
    AssistantsFilesBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${self:provider.environment.ASSISTANTS_CODE_INTERPRETER_FILES_BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins: ['*']
              AllowedMethods: ['GET']
              AllowedHeaders: ['*']
              MaxAge: 3000     
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
    
    GroupAssistantConversationsBucket:
      Type: 'AWS::S3::Bucket'
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:provider.environment.S3_GROUP_ASSISTANT_CONVERSATIONS_BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins: ['*']
              AllowedMethods: ['GET', 'PUT']
              AllowedHeaders: ['*']
              MaxAge: 3000     
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256

    AssistantsLambdaPolicy:
      Type: 'AWS::IAM::ManagedPolicy'
      Properties:
        ManagedPolicyName: ${self:provider.environment.ASSISTANT_LAMBDA_MANAGED_POLICY}
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:DeleteItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - s3:GetObject
                - s3:PutObject
                - s3:ListBucket
              Resource:
                - "arn:aws:secretsmanager:${aws:region}:*:${self:provider.environment.OPENAI_API_KEY}"
                - "${self:provider.environment.LLM_ENDPOINTS_SECRETS_NAME_ARN}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.OBJECT_ACCESS_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.SHARES_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ACCOUNTS_DYNAMO_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.API_KEYS_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.API_KEYS_DYNAMODB_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ACCOUNTS_DYNAMO_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANT_CODE_INTERPRETER_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.BILLING_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANTS_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANTS_DYNAMODB_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANTS_ALIASES_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANTS_ALIASES_DYNAMODB_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANT_THREADS_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANT_THREADS_DYNAMODB_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANT_THREAD_RUNS_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANT_THREAD_RUNS_DYNAMODB_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COST_CALCULATIONS_DYNAMO_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COST_CALCULATIONS_DYNAMO_TABLE}/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.GROUP_ASSISTANT_CONVERSATIONS_DYNAMO_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.GROUP_ASSISTANT_CONVERSATIONS_DYNAMO_TABLE}/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.GROUP_ASSISTANT_DASHBOARDS_DYNAMO_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.GROUP_ASSISTANT_DASHBOARDS_DYNAMO_TABLE}/*"
                - "arn:aws:s3:::${self:provider.environment.ASSISTANTS_CODE_INTERPRETER_FILES_BUCKET_NAME}/*"
                - "arn:aws:s3:::${self:provider.environment.ASSISTANTS_FILES_BUCKET_NAME}/*"
                - "arn:aws:s3:::${self:provider.environment.S3_IMAGE_INPUT_BUCKET_NAME}/*"
                - "arn:aws:s3:::${self:provider.environment.S3_GROUP_ASSISTANT_CONVERSATIONS_BUCKET_NAME}/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANT_LOOKUP_DYNAMODB_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.ASSISTANT_LOOKUP_DYNAMODB_TABLE}/index/*"

            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: 
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.HASH_FILES_DYNAMO_TABLE}"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.HASH_FILES_DYNAMO_TABLE}/index/*"
                - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.GROUPS_DYNAMO_TABLE}"
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource:
                - "arn:aws:s3:::${self:provider.environment.S3_SHARE_BUCKET_NAME}"